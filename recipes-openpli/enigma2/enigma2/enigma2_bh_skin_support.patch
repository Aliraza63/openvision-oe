diff -Naur pli-e2.orig/lib/gui/egauge.cpp pli-e2/lib/gui/egauge.cpp
--- pli-e2.orig/lib/gui/egauge.cpp	1970-01-01 01:00:00.000000000 +0100
+++ pli-e2/lib/gui/egauge.cpp	2018-02-15 10:25:30.325492539 +0100
@@ -0,0 +1,96 @@
+#include <lib/gui/egauge.h>
+#include <math.h>
+
+
+eGauge::eGauge(eWidget *parent)
+	:eWidget(parent), m_have_border_color(false)
+{
+
+}
+
+void eGauge::setBorderColor(const gRGB &color)
+{
+	m_border_color=color;
+	m_have_border_color=true;
+	invalidate();
+}
+
+int eGauge::event(int event, void *data, void *data2)
+{
+	switch (event)
+	{
+	case evtPaint:
+	{
+		ePtr<eWindowStyle> style;
+
+		eSize s(size());
+
+		gPainter &painter = *(gPainter*)data2;
+
+		gRGB pal[256];
+		pal[0] = 0;
+		pal[1] = m_border_color;
+		pal[2] = 0xffFFff;
+		pal[3] = 0x00ff00;
+
+		for (int a=0; a<0x10; ++a)
+			pal[a | 0x10] = (0x111111 * a) | 0xFF;
+		painter.setPalette(pal, 0, 256);
+
+		if (m_have_border_color) {
+			painter.setBackgroundColor(gColor(1));
+			painter.setForegroundColor(gColor(1));
+		} else  {
+			painter.setBackgroundColor(gColor(2));
+			painter.setForegroundColor(gColor(2));
+		}
+
+		painter.line(ePoint(basex, basey), ePoint(endx, endy));
+		painter.line(ePoint(basex, (basey -1)), ePoint(endx, endy));
+		painter.line(ePoint(basex, (basey -2)), ePoint(endx, endy));
+		painter.line(ePoint(basex, (basey +1)), ePoint(endx, endy));
+		painter.line(ePoint(basex, (basey +2)), ePoint(endx, endy));
+		painter.line(ePoint((basex -1), basey), ePoint(endx, endy));
+		painter.line(ePoint((basex -2), basey), ePoint(endx, endy));
+		painter.line(ePoint((basex +1), basey), ePoint(endx, endy));
+		painter.line(ePoint((basex +2), basey), ePoint(endx, endy));
+		if(basex < endx)
+			painter.line(ePoint(basex, basey), ePoint((endx -1), endy));
+		if(basex > endx)
+			painter.line(ePoint(basex, basey), ePoint((endx +1), endy));
+		if(basey > endy)
+			painter.line(ePoint(basex, basey), ePoint(endx, (endy -1)));
+		if(basey < endy)
+			painter.line(ePoint(basex, basey), ePoint(endx, (endy +1)));
+
+
+		return 0;
+	}
+	case evtChangedGauge:
+	{
+
+		int mystart = 0;
+		int perc = m_value;
+
+		basex = size().width() >> 1;
+		basey = size().height() >> 1;
+		double angle = (double) mystart + (double) perc * (double)(360 - (mystart<<1)) / 100.0;
+		double rads  = angle*M_PI/180;
+
+		endx = basex + (int) (sin(rads) * (double)(size().width())/2.0);
+		endy = basey - (int) (cos(rads) * (double)(size().height())/2.0);
+
+		invalidate();
+
+		return 0;
+	}
+	default:
+		return eWidget::event(event, data, data2);
+	}
+}
+
+void eGauge::setValue(int value)
+{
+	m_value = value;
+	event(evtChangedGauge);
+}
diff -Naur pli-e2.orig/lib/gui/egauge.h pli-e2/lib/gui/egauge.h
--- pli-e2.orig/lib/gui/egauge.h	1970-01-01 01:00:00.000000000 +0100
+++ pli-e2/lib/gui/egauge.h	2018-02-15 10:25:30.325492539 +0100
@@ -0,0 +1,26 @@
+#ifndef __lib_gui_egauge_h
+#define __lib_gui_egauge_h
+
+#include <lib/gui/ewidget.h>
+
+class eGauge: public eWidget
+{
+public:
+	eGauge(eWidget *parent);
+	void setValue(int val);
+	void setBorderColor(const gRGB &color);
+protected:
+	int event(int event, void *data=0, void *data2=0);
+private:
+	enum eGaugeEvent
+	{
+		evtChangedGauge = evtUserWidget
+	};
+	bool m_have_border_color;
+	int m_value;
+	int endx, endy, basex, basey;
+	
+	gRGB m_border_color;
+};
+
+#endif
diff -Naur pli-e2.orig/lib/gui/Makefile.inc pli-e2/lib/gui/Makefile.inc
--- pli-e2.orig/lib/gui/Makefile.inc	2018-02-15 10:23:52.377217931 +0100
+++ pli-e2/lib/gui/Makefile.inc	2018-02-15 10:25:30.325492539 +0100
@@ -3,6 +3,7 @@
 gui_libenigma_gui_a_SOURCES = \
 	gui/ebutton.cpp \
 	gui/ecanvas.cpp \
+	gui/egauge.cpp \
 	gui/einput.cpp \
 	gui/einputnumber.cpp \
 	gui/einputstring.cpp \
@@ -25,6 +26,7 @@
 guiinclude_HEADERS = \
 	gui/ebutton.h \
 	gui/ecanvas.h \
+	gui/egauge.h \
 	gui/einput.h \
 	gui/einputnumber.h \
 	gui/einputstring.h \
diff -Naur pli-e2.orig/lib/python/Components/Converter/BhAnalogic.py pli-e2/lib/python/Components/Converter/BhAnalogic.py
--- pli-e2.orig/lib/python/Components/Converter/BhAnalogic.py	1970-01-01 01:00:00.000000000 +0100
+++ pli-e2/lib/python/Components/Converter/BhAnalogic.py	2018-02-15 10:25:30.325492539 +0100
@@ -0,0 +1,34 @@
+from Components.Converter.Converter import Converter
+from Components.Element import cached
+from time import localtime, strftime
+
+class BhAnalogic(Converter, object):
+
+	def __init__(self, type):
+		Converter.__init__(self, type)
+		if type == "Seconds":
+			self.type = 1
+		elif type == "Minutes":
+			self.type = 2
+		elif type == "Hours":
+			self.type = 3
+		else:
+			self.type = -1
+
+	@cached
+	def getValue(self):
+		time = self.source.time
+		if time is None:
+			return 0
+		
+		t = localtime(time)	
+		
+		if self.type == 1:
+			return int((t.tm_sec *100) /60)
+		elif self.type == 2:
+			return int((t.tm_min *100) /60)
+		elif self.type == 3:
+			return int(((t.tm_hour *100) /12) + (t.tm_min /8))
+		
+
+	value = property(getValue)
diff -Naur pli-e2.orig/lib/python/Components/Converter/Makefile.am pli-e2/lib/python/Components/Converter/Makefile.am
--- pli-e2.orig/lib/python/Components/Converter/Makefile.am	2018-02-15 10:23:52.380217848 +0100
+++ pli-e2/lib/python/Components/Converter/Makefile.am	2018-02-15 10:25:30.325492539 +0100
@@ -8,4 +8,4 @@
 	ServiceOrbitalPosition.py CryptoInfo.py TextCase.py \
 	ValueBitTest.py TunerInfo.py ConfigEntryTest.py ClientsStreaming.py TemplatedMultiContent.py ProgressToText.py \
 	Combine.py SensorToText.py ValueToPixmap.py PliExtraInfo.py genre.py TransponderInfo.py \
-	RotorPosition.py VfdDisplay.py
+	RotorPosition.py VfdDisplay.py BhAnalogic.py
diff -Naur pli-e2.orig/lib/python/Components/Renderer/Bhclock.py pli-e2/lib/python/Components/Renderer/Bhclock.py
--- pli-e2.orig/lib/python/Components/Renderer/Bhclock.py	1970-01-01 01:00:00.000000000 +0100
+++ pli-e2/lib/python/Components/Renderer/Bhclock.py	2018-02-15 10:25:30.325492539 +0100
@@ -0,0 +1,34 @@
+from Components.VariableValue import VariableValue
+from Renderer import Renderer
+
+from enigma import eGauge
+
+class Bhclock(VariableValue, Renderer):
+	def __init__(self):
+		Renderer.__init__(self)
+		VariableValue.__init__(self)
+
+	GUI_WIDGET = eGauge
+
+	def changed(self, what):
+		if what[0] == self.CHANGED_CLEAR:
+			return
+
+		value = self.source.value
+		if value is None:
+			value = 0
+		self.setValue(value)
+		
+	GUI_WIDGET = eGauge
+	
+	def postWidgetCreate(self, instance):
+		instance.setValue(0)
+
+	
+	def setValue(self, value):
+		#self.instance.setValue(5)
+		if self.instance is not None:
+			self.instance.setValue(value)
+
+
+	#value = property(setValue)
diff -Naur pli-e2.orig/lib/python/Components/Renderer/Makefile.am pli-e2/lib/python/Components/Renderer/Makefile.am
--- pli-e2.orig/lib/python/Components/Renderer/Makefile.am	2018-02-15 10:23:52.384217736 +0100
+++ pli-e2/lib/python/Components/Renderer/Makefile.am	2018-02-15 10:25:30.325492539 +0100
@@ -3,4 +3,4 @@
 install_PYTHON = \
 	__init__.py Label.py Progress.py Listbox.py Renderer.py Pixmap.py \
 	FixedLabel.py PositionGauge.py Canvas.py CiModuleControl.py Picon.py Pig.py \
-	FrontpanelLed.py ChannelNumber.py VideoSize.py NextEpgInfo.py
+	FrontpanelLed.py ChannelNumber.py VideoSize.py NextEpgInfo.py Bhclock.py
diff -Naur pli-e2.orig/lib/python/enigma_python.i pli-e2/lib/python/enigma_python.i
--- pli-e2.orig/lib/python/enigma_python.i	2018-02-15 10:23:52.426216568 +0100
+++ pli-e2/lib/python/enigma_python.i	2018-02-15 10:25:30.325492539 +0100
@@ -69,6 +69,7 @@
 #include <lib/gui/ewidgetanimation.h>
 #include <lib/gui/eslider.h>
 #include <lib/gui/epositiongauge.h>
+#include <lib/gui/egauge.h>
 #include <lib/gui/evideo.h>
 #include <lib/gui/ecanvas.h>
 #include <lib/python/connections.h>
@@ -213,6 +214,7 @@
 %include <lib/gui/ewindow.h>
 %include <lib/gui/eslider.h>
 %include <lib/gui/epositiongauge.h>
+%include <lib/gui/egauge.h>
 %include <lib/gui/ewidgetdesktop.h>
 %include <lib/gui/elistbox.h>
 %include <lib/gui/elistboxcontent.h>
